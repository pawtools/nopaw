workload:
  launcher:  "bsub"

  options:
    -J:      "{job_name}"
    -P:      "{allocation}"
    -W:      "{minutes}"
    -nnodes: "{n_nodes}"

  arguments:
    - "-alloc_flags \"gpumps smt4\""

  # TODO export this functionality to use things
  #      like pawtools.MongoInstance and such to
  #      simplify creation of complex environment
  #      -- exemplify both / equivalence in docs
  #      -- the kooky situation with summit ulimits
  #         justifies avoidign this for now :)
  #         -- havent gotten shutdown via expect to
  #            work all the way
  script:
    - "module unload python"
    - "export OMP_NUM_THREADS={threads_per_task}"
    - "source {shprofile}"
    - "which python"
    - "NNODES={n_nodes}"
    - "NETDEVICE=\"ib0\""
    #or
    #- "NNODES=$(echo \"`echo $LSB_MCPU_HOSTS | tr ' ' '\n' | sort -u | wc -l` - 3\" | bc)"
    #TODO config per task
    - "mongohostlaunch=\"jsrun --exit_on_error 1 --nrs 1 --rs_per_host 1 --tasks_per_rs 1 --cpu_per_rs 42 --bind packed:42 --launch_distribution plane:1 db-ghost-writer.bash $NETDEVICE $DBLOCATION\""
    - "echo $mongohostlaunch"
    - "eval $mongohostlaunch 2> nopaw.mongodb.ghost.err 1> nopaw.mongodb.ghost.out & MONGO_GPID=$!"
    - "sleep 15"
    - "REMOTEHOST=$(cat $DBLOCATION/hostname.txt)"
    - "ls -grth $DBLOCATION"
    - "VERBOSE=\"\""
    - "REMOTEPORT=27017"
    - "export DBURL=\"mongodb://$REMOTEHOST:$REMOTEPORT/\""
    - "echo \"MongoDB URL: $DBURL\""
    - "mongosshlaunch=\"ssh-and-launch.expect $SHPROFILE $REMOTEHOST launch_amongod $DBLOCATION $REMOTEPORT $VERBOSE\""
    - "eval $mongosshlaunch 2> nopaw.mongodb.sshlaunch.err 1> nopaw.mongodb.sshlaunch.out & MONGO_APID=$!"
    - "sleep 20"
    - "initmongodbcommand=\"mongo-initdb.py $REMOTEHOST $REMOTEPORT $DBNAME\""
    - "echo $initmongodbcommand"
    - "eval $initmongodbcommand 2> nopaw.mongodb.initialize.err 1> nopaw.mongodb.initialize.out"
    #Workflow Runtime Start Timestamp
    - "echo \"a worklow starts `date +%Y/%m/%d-%H:%M:%S.%5N`\""
    #- "executorlaunch=\"jsrun --exit_on_error 1 --nrs $NEXECUTORS --tasks_per_rs 1 --cpu_per_rs $OMP_NUM_THREADS --bind packed:$OMP_NUM_THREADS --launch_distribution plane:1 --smpiargs off db-connector.bash $REMOTEHOST $REMOTEPORT $DBNAME $OPERATION\""
    #- "echo $executorlaunch"
    #- "eval $executorlaunch 2> nopaw.executor.launch.err 1> nopaw.executor.launch.out & EXEC_APID=$!"
    #- "wait $EXEC_APID"

  postscript:
    #Runtime Complete Timestamp
    - "echo \"a worklow stops `date +%Y/%m/%d-%H:%M:%S.%5N`\""
    - "echo \"Going to shut down the database, event is finished\""
    - "kill $MONGO_APID"
    - "wait $MONGO_APID"
    #Probably needed because of kooky ssh-expect mongo launch, ie ulimit bug
    #ie summit is the only case of mongodb having unclean shutdown
    - "count=0"
    - "sleeptime=3"
    - "while [ \"$count\" -lt 12 ]"
    - "do"
    - "  count=$(( count + 1 ))"
    - "  echo \"Waiting for database to close, $sleeptime seconds x $count times\""
    - "  if [ ! -f \"$DBLOCATION/db/mongod.lock\" ]"
    - "  then"
    - "    echo \"Database is closed\""
    - "    count=13"
    - "  elif [ \"$count\" -eq 12 ]"
    - "  then"
    - "    echo \"Manually removing 'mongod' and 'WiredTiger' lock files\""
    - "    rm \"$DBLOCATION/db/mongod.lock\""
    - "    rm \"$DBLOCATION/db/WiredTiger.lock\""
    - "  fi"
    - "  sleep $sleeptime"
    - "done"
    - ""
    - "kill $MONGO_GPID"
    - "wait $MONGO_GPID"
    - "rm $DBLOCATION/hostname.txt"
    - "echo \"bkill $LSB_JOBID\""
    - "bkill $LSB_JOBID\""

task:
  launcher: "jsrun"

  resource:
    --exit_on_error:       1
    --nrs:                 "{n_tasks}"
    --tasks_per_rs:        "{mpi_per_task}"
    --cpu_per_rs:          "{threads_per_task}"
    --gpu_per_rs:          "{gpu_per_task}"
    --bind:                "packed:{threads_per_task}"
    --launch_distribution: "plane:{mpi_per_task}"
    --latency_priority:

