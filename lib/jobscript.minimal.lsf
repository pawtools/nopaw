#!/bin/bash

source $SHPROFILE

AARGS=(`echo $ARGS | tr '*' ' '`)
JOBHOME="${AARGS[0]}"
DBLOCATION="${AARGS[1]}"
LAYFACTOR="${AARGS[2]}"
NEXECUTORS="${AARGS[3]}"
#DBNAME="${AARGS[4]}"
DBNAME="testdb"
RUNNAME="${AARGS[4]}"
OPERATION="${AARGS[5]}"
NETDEVICE="ib0"

cd $JOBHOME
export OMP_NUM_THREADS=$(( 42 / $LAYFACTOR ))
export RS_PER_HOST="$LAYFACTOR"

NNODES=$(echo "`echo $LSB_MCPU_HOSTS | tr ' ' '\n' | sort -u | wc -l` - 3" | bc)

mongoghostlaunch="jsrun --exit_on_error 1 --nrs 1 --rs_per_host 1 --tasks_per_rs 1 --cpu_per_rs 42 --bind packed:42 --launch_distribution plane:1 db-ghost-writer.bash $NETDEVICE $DBLOCATION"
echo $mongoghostlaunch
eval $mongoghostlaunch 2> nopaw.mongodb.ghost.err 1> nopaw.mongodb.ghost.out & MONGO_GPID=$!
# Must wait for mongo node to write hostname and start up
sleep 15
REMOTEHOST=$(cat $DBLOCATION/hostname.txt)

#####----------------------------------------------#####
###--          mongodb ssh launcher                --###
#####----------------------------------------------#####
echo "Database top:"
ls -grth $DBLOCATION
#VERBOSE="-vvvv"
VERBOSE=""
REMOTEPORT="27017"
export DBURL="mongodb://$REMOTEHOST:$REMOTEPORT/"
echo "MongoDB URL: $DBURL"
mongosshlaunch="ssh-and-launch.expect $SHPROFILE $REMOTEHOST launch_amongod $DBLOCATION $REMOTEPORT $VERBOSE"
eval $mongosshlaunch 2> nopaw.mongodb.sshlaunch.err 1> nopaw.mongodb.sshlaunch.out & MONGO_APID=$!
sleep 20

#####----------------------------------------------#####
###--         Initialize the MongoDB               --###
#####----------------------------------------------#####
initmongodbcommand="mongo-initdb.py $REMOTEHOST $REMOTEPORT $DBNAME"
echo $initmongodbcommand
eval $initmongodbcommand 2> nopaw.mongodb.initialize.err 1> nopaw.mongodb.initialize.out

#####----------------------------------------------#####
###--           Executor Launcher                  --###
#####----------------------------------------------#####
echo "a worklow starts `date +%Y/%m/%d-%H:%M:%S.%5N`"

executorlaunch="jsrun --exit_on_error 1 --nrs $NEXECUTORS --tasks_per_rs 1 --cpu_per_rs $OMP_NUM_THREADS --bind packed:$OMP_NUM_THREADS --launch_distribution plane:1 --smpiargs off db-connector.bash $REMOTEHOST $REMOTEPORT $DBNAME $OPERATION"
echo $executorlaunch
eval $executorlaunch 2> nopaw.executor.launch.err 1> nopaw.executor.launch.out & EXEC_APID=$!

#####----------------------------------------------#####
###--           Finishing Up Now                   --###
#####----------------------------------------------#####
wait $EXEC_APID

echo "a worklow stops `date +%Y/%m/%d-%H:%M:%S.%5N`"

echo "Going to shut down the database, event is finished"
kill "$MONGO_APID"
wait "$MONGO_APID"

count="0"
sleeptime="3"
while [ "$count" -lt 12 ]
do
  count=$(( count + 1 ))
  echo "Waiting for database to close, $sleeptime seconds x $count times"
  if [ ! -f "$DBLOCATION/db/mongod.lock" ]
  then
    echo "Database is closed"
    count="13"
  elif [ "$count" -eq 12 ]
  then
    echo "Manually removing 'mongod' and 'WiredTiger' lock files"
    rm "$DBLOCATION/db/mongod.lock"
    rm "$DBLOCATION/db/WiredTiger.lock"
  fi
  sleep $sleeptime
done

kill "$MONGO_GPID"
wait "$MONGO_GPID"
rm $DBLOCATION/hostname.txt

# Sometimes job doesn't die nicely...
echo "I'm depressed, killing myself!"
echo "bkill $LSB_JOBID"
bkill $LSB_JOBID
